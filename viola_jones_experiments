import cv2
import numpy as np
import matplotlib as plt
import scipy as sc
from pprint import pprint


def face_detect(image, image_no):
    cascade = cv2.CascadeClassifier('frontalface.xml')
    frame_gray = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)
    cv2.equalizeHist(frame_gray, frame_gray)
    faces = cascade.detectMultiScale(frame_gray, 1.1, 10)
    pprint(len(faces))
    for (x, y, w, h) in faces:
        cv2.rectangle(image, (x, y), (x+w, y+h), (0, 0, 255), 2)
        roi_gray = frame_gray[y:y+h, x:x+w]
        roi_color = image[y:y+h, x:x+w]

    # add ground truth rectangles
    face_pos, face_size = get_face_positions(image_no)
    (no_faces, j) = face_pos.shape[:2]
    for i in range(no_faces):
        (w, h) = face_size[i][:]
        pprint((w, h))
        (x, y) = face_pos[i][:]
        pprint((x, y))
        cv2.rectangle(image, (x, y),
                      (x+w, y+h), (0, 255, 0), 2)
    cv2.imshow('lol', image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()


def get_face_positions(image_number=4):
    img4_face_positions = np.array([[354, 125]])
    img4_face_sizes = np.array([[114, 126]])

    img5_face_positions = np.array([[71, 150], [50, 250], [191, 221], [254, 173], [
        300, 246], [381, 189], [428, 243], [512, 186], [554, 248], [645, 179], [677, 251]])
    img5_face_sizes = np.array([[51, 53], [60, 65], [56, 58], [50, 50], [49, 62], [
        60, 55], [56, 55], [52, 55], [62, 62], [50, 65], [54, 60]])

    img13_face_positions = np.array([[425, 120]])
    img13_face_sizes = np.array([[97, 135]])

    img14_face_positions = np.array([[471, 227], [731, 198]])
    img14_face_sizes = np.array([[76, 90], [94, 93]])

    img15_face_positions = np.array([[56, 137], [365, 107], [534, 129]])
    img15_face_sizes = np.array([[70, 78], [86, 93], [84, 86]])

    if (image_number == 4):
        return img4_face_positions, img4_face_sizes
    if (image_number == 5):
        return img5_face_positions, img5_face_sizes
    if (image_number == 13):
        return img13_face_positions, img13_face_sizes
    if (image_number == 14):
        return img14_face_positions, img14_face_sizes
    if (image_number == 15):
        return img15_face_positions, img15_face_sizes


image_no = 14
image = cv2.imread("dart14.jpg")
face_detect(image, image_no)
